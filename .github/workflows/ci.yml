name: CI

on:
  pull_request:
  push:
    branches:
      - "main"
    tags:
      - "*"

concurrency:
  group: ${{ github.event_name }}-${{ github.ref }}

jobs:
  tests:
    strategy:
      matrix:
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"

    name: "py${{ matrix.python-version }}"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@f0ec1fc3b38f5e7cd731bb6ce540c5af426746bb # v6
        with:
          python-version: "${{ matrix.python-version }}"

      - name: Run tests
        run: uv run pytest
        env:
          COVERAGE_FILE: ".coverage.${{ matrix.python-version }}"

      - name: Store coverage file
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: .coverage.${{ matrix.python-version }}

  static-typing:
    name: Run Pyright
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@f0ec1fc3b38f5e7cd731bb6ce540c5af426746bb # v6
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: uv sync --all-extras

      - name: Activate virtualenv
        run: echo ".venv/bin" >> $GITHUB_PATH

      - name: Extract pyright version from pre-commit
        id: pre-commit-pyright-version
        run: >
          yq '.repos
          | filter(.repo == "https://github.com/RobertCraigie/pyright-python").0.rev
          | "pyright-version="+sub("^v", "") | sub(".post\d+$"; "")'
          .pre-commit-config.yaml >> $GITHUB_OUTPUT

      - uses: jakebailey/pyright-action@v2
        with:
          version: ${{ steps.pre-commit-pyright-version.outputs.pyright-version }}

  report-status:
    name: success
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Report success
        run: echo 'Success !'

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          pattern: coverage-*
          merge-multiple: true

      - name: Display coverage
        uses: ewjoachim/python-coverage-comment-action@v3
        with:
          MERGE_COVERAGE_FILES: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Store Pull Request comment to be posted
        uses: actions/upload-artifact@v4
        with:
          name: python-coverage-comment-action
          path: python-coverage-comment-action.txt

  publish:
    name: Publish package to PyPI
    if: github.event_name == 'push' && github.ref_type == 'tag'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    needs:
      - tests
      - static-typing
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-tags: true
          ref: ${{ github.ref }}

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@f0ec1fc3b38f5e7cd731bb6ce540c5af426746bb # v6

      - name: build wheel & sdist
        run: uv build

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

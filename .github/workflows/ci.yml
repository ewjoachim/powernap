name: CI

on:
  pull_request:
  push:
    branches:
      - 'main'

concurrency:
  group: ${{ github.event_name }}-${{ github.ref }}

jobs:
  build:

    strategy:
      matrix:
          python-version:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"

    name: "py${{ matrix.python-version }}"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install poetry
        run: pipx install poetry

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python-version }}"
          cache: "poetry"

      - name: Configure Poetry to use Python ${{ matrix.python-version }}
        run: poetry env use "${{ matrix.python-version }}"

      - name: Install deps
        run: poetry install

      - name: Run tests
        run: poetry run pytest
        env:
          COVERAGE_FILE: ".coverage.${{ matrix.python-version }}"

      - name: Store coverage file
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: .coverage.${{ matrix.python-version }}


  static-typing:
    name: Run Pyright
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4

      - uses: actions/setup-python@v5
        with:
          cache: "poetry"

      - name: Install poetry
        run: pipx install poetry

      - name: Install dependencies
        run: poetry install --all-extras

      - name: Activate virtualenv
        run: echo "$(poetry env info --path)/bin" >> $GITHUB_PATH

      - name: Extract pyright version from pre-commit
        id: pre-commit-pyright-version
        run: >
          yq '.repos
          | filter(.repo == "https://github.com/RobertCraigie/pyright-python").0.rev
          | "pyright-version="+sub("^v", "")'
          .pre-commit-config.yaml >> $GITHUB_OUTPUT

      - uses: jakebailey/pyright-action@v2
        with:
          version: ${{ steps.pre-commit-pyright-version.outputs.pyright-version }}

  report-status:
    name: success
    runs-on: ubuntu-latest
    needs: build
    steps:

      - name: Report success
        run: echo 'Success !'

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          pattern: coverage-*
          merge-multiple: true

      - name: Display coverage
        uses: ewjoachim/python-coverage-comment-action@v3
        with:
          MERGE_COVERAGE_FILES: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Store Pull Request comment to be posted
        uses: actions/upload-artifact@v4
        with:
          name: python-coverage-comment-action
          path: python-coverage-comment-action.txt
